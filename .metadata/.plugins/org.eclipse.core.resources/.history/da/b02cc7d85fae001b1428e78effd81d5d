package ncontroller;

import java.sql.SQLException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import dao.NoticeDao;
import vo.Notice;

@Controller
@RequestMapping("/customer/")
public class CustomerController {
	
	private NoticeDao noticedao;

	public NoticeDao getNoticedao() {
		return noticedao;
	}
	@Autowired
	public void setNoticedao(NoticeDao noticedao) {
		this.noticedao = noticedao;
	}
	
	/*
		1. method 안에서 return type [String] 리턴값이 뷰의 주소
		
		2. public ModelAndView noticeView >> ModelAndView 객체 생성 > 데이터 뷰 설정 > return
		
		3. public String noticeView(Model model){ 함수 실행시 내부적으로 Model객체의 주소가 들어온다 } 
	 */
	@RequestMapping("notice.htm")
	public String noticeView(@RequestParam(value = "pg", defaultValue = "1") String page, 
								   @RequestParam(value = "f", defaultValue = "TITLE") String field, 
								   @RequestParam(value = "p", defaultValue = "%%") String query,
								   Model model) {
		
		int _page = Integer.parseInt(page);
		
		//DAO 작업
		List<Notice> list = null;
		try {
			list = noticedao.getNotices(_page, field, query);
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		//Spring 적용
		/*
		ModelAndView mv = new ModelAndView();
		mv.addObject("list",list);
		mv.setViewName("notice");
		*/
		
		model.addAttribute("list",list);//자동으로 notice.jsp forward
		
		/*
			<c:forEach items = "${list}" var = "list">
		 */
		return "notice";
		
		
	}
	@RequestMapping("noticeDetail.htm")
	public String noticeDetail(String seq, Model model) {
		
		
		Notice notice = null;
		try {
			notice = noticedao.getNotice(seq);
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		model.addAttribute("notice",notice);
		
		
		return "noticeDetail";
	}
	
	//글쓰기 화면(GET)
	//http://localhost:8090/SpringMVC_Basic04_WebSite_Annotation/customer/notice.htm
	@RequestMapping(value = "noticeReg.htm", method=RequestMethod.GET)
	public String noticeReg() {
		
		return "noticeReg";
	}
	
	//글쓰기 처리(POST)
	@RequestMapping(value = "noticeReg.htm", method=RequestMethod.POST)
	public String noticeReg(Notice n, Model model) {
		System.out.println(n.toString());
		model.addAttribute("notice", n);
		return "writeview";
	}
	
	//글 수정하기(화면) GET
	@RequestMapping(value = "noticeEdit.htm", method=RequestMethod.GET)
	public String noticeEdit() {
		
		return null;
	}
	
	//글 수정하기(처리) POST
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

}
